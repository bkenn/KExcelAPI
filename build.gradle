buildscript {
    ext.kotlin_version = '1.2.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
    }
}

apply plugin: 'kotlin'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'org.apache.poi:poi-ooxml:3.17'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

// http://tagomoris.hatenablog.com/entry/20141028/1414485679
// http://tagomoris.hatenablog.com/entry/2016/02/16/114226
apply plugin: 'maven'
apply plugin: 'signing'

group = "link.webarata3.kexcelapi"
archivesBaseName = "kexcelapi"
version = "0.5.1"
description = "POI wrapper for Kotlin"

def isDevBuild
def isCiBuild
def isReleaseBuild
def sonatypeRepositoryUrl
if (hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
    isCiBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

/* Source作成用のタスク */
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

def repo = new File(rootDir, "build/repository")

signing {
    required { isReleaseBuild }
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        }
        else {
            mavenDeployer {
                if(isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }
                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: "${ossrhUsername}", password: "${ossrhPassword}")
                }

                pom.project {
                    name 'kexcelapi'
                    packaging 'jar'
                    description 'POI wrapper for Kotlin'
                    url 'https://webarata3.github.io/KExceelAPI/'

                    scm {
                        url "scm:git@github.com:webarata3/KExcelAPI.git"
                        connection "scm:git@github.com:webarata3/KExcelAPI.git"
                        developerConnection "scm:git@github.com:webarata3/KExcelAPI.git"
                    }
                    licenses {
                        license {
                            name 'MIT'
                            url 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id 'webarata3'
                            name 'Shinichi Arata'
                            email 'webarata3@gmail.com'
                        }
                    }
                }
            }
        }
    }
}

apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = true
    }
}

apply plugin: 'com.github.kt3k.coveralls'

coveralls {
    sourceDirs = files(sourceSets.main.allSource.srcDirs).files.absolutePath
}
